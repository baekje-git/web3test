<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="myPage">
    <select id="selectCustInfoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectCustInfoList 기본정보 조회 */
        SELECT EMP_ID
             , EMP_NM
             , EMP_HP_NO
             , BRCH_CD
             , BRCH_NM
             , BRCH_TEL_NO
             , DRIVER_NM   
             , DRIVER_HP_PHONE
          FROM V_CUST
         WHERE CUST_CD = #{custCd}
    </select>

    <select id="selectMypageOrdList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypageOrdList 마이페이지 최근주문내역 8개 */
        SELECT A.TBL_NM
             , A.GUBUN
             ,CASE WHEN A.TBL_NM = 'T_SALEBACKRCPT' THEN (SELECT MAX(CD_NM)
                                               FROM T_CODE 
                                              WHERE P_CODE = '402' AND CODE = (CASE WHEN C.ORD_TYPE_CD='10' THEN '03' ELSE C.BACK_EXAM_CD END))
      WHEN A.TBL_NM = 'T_SALEBACK'     THEN (SELECT IFNULL(MAX(CASE WHEN D.ORD_TYPE_CD  = '10' THEN CD_NM
                                                                    WHEN D.BACK_EXAM_CD = '05' THEN CD_NM
                                                                    WHEN (SELECT COUNT(1) FROM T_SALEBACKRCPTMOVE_DTL WHERE SN = D.SN AND ITEM_QTY_NOBACK <![CDATA[>]]> 0) <![CDATA[>]]> 0 THEN '부분완료'
                                                                    WHEN D.BACK_EXAM_CD <![CDATA[<=]]> '02' THEN '완료'
                                                                    ELSE IFNULL(CD_NM,'') END),'완료')
                                              FROM T_CODE
                                             WHERE P_CODE = '402' AND CODE = (CASE WHEN D.ORD_TYPE_CD='10' THEN '03' ELSE D.BACK_EXAM_CD END))
      ELSE A.STATS
 END AS STATS /* 처리상태*/
             , A.BRCH_CD
             , A.CUST_CD
             , A.SN
             , A.ORD_DT
             , A.ORD_DT_FM
             , A.APRV_DT
             , A.APRV_DT_FM
             , A.ORDDTTM
             , A.APRVDTTM
             , A.APRV_NO
             , A.ITEM_NM
             , A.ITEM_NM_UNIT
             , A.ITEM_CNT
             , A.ORD_MEMO
             , (SELECT SUM(X.TOTAL_AMT)
                  FROM V_WEB_ORDER_D X
                 WHERE X.SN = A.SN
               ) AS TOTAL_AMT
             , (SELECT SUBSTRING(Y.CD_NM, 1, 1)
                  FROM T_ITEM X
                  JOIN T_CODE Y
                    ON Y.P_CODE = '101'
                   AND Y.CODE = X.MED_CD
                 WHERE X.ITEM_CD = A.ITEM_CD
               ) AS MED_NM
          FROM V_WEB_ORDER_M A
          LEFT JOIN T_SALEBACK B
            ON B.SN = A.SN
          LEFT JOIN T_SALEBACKRCPT C
            ON C.SN = A.SN
          LEFT JOIN T_SALEBACKRCPTMOVE D
            ON D.SN = A.SN
         WHERE A.CUST_CD = #{custCd}
         ORDER BY A.ORDDTTM DESC
         FETCH FIRST 8 ROWS ONLY
    </select>
    
    <select id="selectMypageNoticeList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypageNoticeList 마이페이지 공지사항 3개 */
        SELECT A.TTL
             , VARCHAR_FORMAT( A.INS_DTM, 'YYYY.MM.DD') AS INS_DTM
             , A.SEQ_NO
             , CAST(A.CTT as varchar(32000)) AS CTT
          FROM T_BOARD A
         WHERE A.BOARD_CD = '06'
           AND A.DEL_YN = 'N'
         ORDER BY A.SEQ_NO DESC
         FETCH FIRST 3 ROW ONLY
    </select>
    
    <select id="selectMypageBrchNoticeList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypageBrchNoticeList 마이페이지 지점 공지사항 */
        SELECT A.TTL
             , VARCHAR_FORMAT( A.INS_DTM, 'YYYY.MM.DD') AS INS_DTM
             , A.SEQ_NO
             , CAST(A.CTT as varchar(32000)) AS CTT
          FROM T_BOARD A
         WHERE A.BOARD_CD = '07'
           AND A.DEL_YN = 'N'
           AND A.BRCH_CD = #{brchCd}
         ORDER BY A.SEQ_NO DESC
         FETCH FIRST 3 ROW ONLY
    </select>
    
    <select id="selectMypageActivity" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypageActivity 마이페이지 활동 조회 */
        SELECT A.SALE_AMT + B.BACK_AMT AS TOTAL_AMT /* 순판매금액 */
             , A.SALE_AMT /* 주문금액 */
             , A.SALE_CNT /* 주문건수 */
             , C.BALANCE_A_AMT /* 잔고 */
             , D.NOT_REG /* 미등록건수 */
             , D.PROCESSING /* 처리중 */
             , D.COMPLETE /* 검수완료 */
             , D.CHARGE /* 담당자 */
             , E.PMNT_CNT /* 결제건수 */
             , E.PMNT_AMT /* 결제금액 */
             , F.DPST_CNT /* 입금건수 */
             , F.PAY_AMT_SUM /* 입금액 */
             , F.PAYBACK_AMT_SUM /* 수금할인 */
          FROM (SELECT IFNULL(SUM(TOTAL_AMT),0) AS SALE_AMT
                     , COUNT(1) AS SALE_CNT
                  FROM T_SALE
                 WHERE CUST_CD = #{custCd}
                   AND APRV_DT BETWEEN #{startDt} AND #{endDt}
                   <!-- AND ORD_TYPE_CD NOT IN ('34','91') -->
               ) A
          JOIN (SELECT IFNULL(SUM(TOTAL_AMT),0) AS BACK_AMT
                     , COUNT(1) AS BACK_CNT
                  FROM T_SALEBACK
                 WHERE CUST_CD = #{custCd}
                   AND APRV_DT BETWEEN #{startDt} AND #{endDt}
                   <!-- AND ORD_TYPE_CD NOT IN ('34','91') -->
               ) B
            ON 1=1
          JOIN (SELECT IFNULL(MAX(BALANCE_A_AMT),0) AS BALANCE_A_AMT
                  FROM T_CUST_BALANCE_DAY
                 WHERE CUST_CD = #{custCd}
                   AND BALANCE_YM = VARCHAR_FORMAT(CURRENT DATE,'YYYYMM')
               ) C
            ON 1=1
          JOIN (SELECT SUM(CASE WHEN BACK_EXAM_CD = '01' THEN 1 ELSE 0 END) AS NOT_REG
                     , SUM(CASE WHEN BACK_EXAM_CD = '02' THEN 1 ELSE 0 END) AS PROCESSING
                     , SUM(CASE WHEN BACK_EXAM_CD = '03' THEN 1 ELSE 0 END) AS COMPLETE
                     , SUM(CASE WHEN BACK_EXAM_CD = '11' THEN 1 ELSE 0 END) AS CHARGE
                  FROM V_WEB_BACK_M
                 WHERE CUST_CD = #{custCd}
                   AND BACK_DT BETWEEN #{startDt3Month} AND #{endDt}
               ) D
            ON 1=1
          JOIN (SELECT COUNT(1) AS PMNT_CNT
                     , IFNULL(SUM(TRANAMT), 0) AS PMNT_AMT
                  FROM T_CREDITCARD
                 WHERE BRCH_CD = #{brchCd}
                   AND CUST_CD = #{custCd}
                   AND RETCODE = '0000'
                   AND SUBSTR(APPROVEDATE,0,9) BETWEEN #{startDt} AND #{endDt}
               ) E
            ON 1 = 1
          JOIN (SELECT COUNT(1) AS DPST_CNT
                     , IFNULL(SUM(A.PAY_AMT), 0) AS PAY_AMT_SUM
                     , IFNULL(SUM(A.PAYBACK_AMT), 0) AS PAYBACK_AMT_SUM
                  FROM V_PAY A
                 WHERE 1 = 1
                   AND A.CUST_CD = #{custCd}
                   AND A.APRV_DT BETWEEN #{startDt} AND #{endDt}
               ) F
            ON 1 = 1
    </select>
    
    <select id="selectMypageFaq" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypageFaq 마이페이지 자주묻는질문 */
        SELECT A.FAQ_NO
             , A.Q_TXT
             , A.A_TXT
          FROM T_WEB_FAQ A
         WHERE 1 = 1
         ORDER BY A.SORT_NO
         FETCH FIRST 3 ROW ONLY
    </select>

    <select id="selectFaqList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectFaqList 자주묻는질문 목록 조회 */
        SELECT A.FAQ_NO
             , A.Q_TXT
             , A.A_TXT
          FROM T_WEB_FAQ A
         WHERE 1 = 1
         ORDER BY A.SORT_NO
    </select>
    
    <select id="selectMypageQna" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypageQna 마이페이지 문의/답변 */
        SELECT ROW_NUMBER() OVER() AS ROWNUMBER
             , A.SNO
             , A.Q_TITLE
             , A.Q_TXT
             , F_S_FORMAT(A.Q_DT, 'YYYY.MM.DD') AS Q_DT
             , A.A_TXT
             , F_S_FORMAT(A.A_DT, 'YYYY.MM.DD') AS A_DT
          FROM T_WEB_QNA A
          JOIN T_CUST B
            ON A.CUST_CD = B.CUST_CD
         WHERE 1 = 1
         AND B.BRCH_CD IN (SELECT BRCH_CD FROM T_BRANCH WHERE P_BRCH_CD = #{loginBrchCd} OR BRCH_CD = #{loginBrchCd})
         <if test="loginDeptCd != null and loginDeptCd !=''"> 
         AND B.DEPT_CD = #{loginDeptCd} 
         </if>
         <if test="userGbCd =='30'">
           AND A.CUST_CD = #{custCd}
         </if>
         ORDER BY A.Q_DT DESC, ROWNUMBER DESC
         FETCH FIRST 3 ROW ONLY
    </select>
 <!--     
    <select id="selectMypageQna" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypageQna 마이페이지 문의/답변 */
        SELECT A.SNO
             , A.Q_TITLE
             , F_S_FORMAT(A.Q_DT, 'YYYY.MM.DD') AS Q_DT
             , A.A_TXT
             , F_S_FORMAT(A.A_DT, 'YYYY.MM.DD') AS A_DT
          FROM T_WEB_QNA A
         WHERE A.CUST_CD = #{custCd}
         ORDER BY A.SNO DESC
         FETCH FIRST 3 ROW ONLY
    </select>
 -->   
    <select id="selectMypageSmsBefore" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypageSmsBefore SMS 관련정보조회 */
        SELECT CASE WHEN LENGTH(damo.SCP_DECB64('SCP_ALL',A.HP_NO)) = 11 THEN  SUBSTR(damo.SCP_DECB64('SCP_ALL',A.HP_NO) ,1,3) || '-' ||  SUBSTR(damo.SCP_DECB64('SCP_ALL',A.HP_NO), 4,4) || '-' || SUBSTR(damo.SCP_DECB64('SCP_ALL',A.HP_NO), 8,4)
                    ELSE SUBSTR(REPLACE(REPLACE(damo.SCP_DECB64('SCP_ALL',A.HP_NO), ' ',''),'-','') , 1,3) || '-' || SUBSTR(REPLACE(REPLACE(damo.SCP_DECB64('SCP_ALL',A.HP_NO), ' ',''),'-','') , 4,4) || '-' || SUBSTR(REPLACE(REPLACE(damo.SCP_DECB64('SCP_ALL',A.HP_NO), ' ',''),'-','') , 8,4)
               END AS EMP_HP
             , A.EMP_NM                             AS EMP_NM
             , B.SMS_YN                             AS SMS_YN
             , CASE WHEN LENGTH( damo.SCP_DECB64('SCP_ALL',IFNULL(B.HP_NO,B.SMS_NO)) ) = 11 THEN  SUBSTR(damo.SCP_DECB64('SCP_ALL',IFNULL(B.HP_NO,B.SMS_NO)) ,1,3) || '-' ||  SUBSTR(damo.SCP_DECB64('SCP_ALL',IFNULL(B.HP_NO,B.SMS_NO)), 4,4) || '-' || SUBSTR(damo.SCP_DECB64('SCP_ALL',IFNULL(B.HP_NO,B.SMS_NO)), 8,4)
                    ELSE damo.SCP_DECB64('SCP_ALL',B.SMS_NO)
               END AS SMS_NO
             , B.CEO_NM                             AS CEO_NM
             , CASE WHEN C.BRCH_GB_CD ='03' THEN damo.SCP_DECB64('SCP_ALL',D.TEL_NO)  ELSE damo.SCP_DECB64('SCP_ALL',C.TEL_NO)
               END AS TEL_NO
        FROM T_EMP A
        LEFT JOIN T_CUST B
          ON A.DEPT_CD = B.DEPT_CD
        JOIN T_BRANCH C
          ON A.BRCH_CD = C.BRCH_CD
        JOIN T_BRANCH D
          ON D.BRCH_CD = C.P_BRCH_CD
        WHERE B.CUST_CD = #{custCd}
        FETCH FIRST 1 ROWS ONLY
    </select>
    
    <insert id="insertSms" parameterType="java.util.HashMap" >
        /* myPage.insertSms SMS insert */
        INSERT INTO SMS.SC_TRAN
        ( TR_PHONE                  /*받는 사람 연락처*/
            , TR_SENDDATE           /*발송일자*/
            , TR_ID                   /* SMS전송ID */
            , TR_MSG                /*메세지 내용*/
            , TR_CALLBACK           /*보내는 사람 연락처*/
            , TR_ETC1               /*WEB 주문*/
            , TR_ETC2               /*보내는 사람 LOGIN_ID*/
            , TR_ETC3               /*수신자명*/
            , TR_ETC4               /*발신자명*/
            , TR_ETC5               /*지점*/
            , TR_REALSENDDATE       /* SMS전송일시(REAL) */
        )
        VALUES
            (
            #{recvTel}                                         /*받는 사람 연락처*/
            , TO_CHAR(CURRENT TIMESTAMP,'YYYYMMDDHH24MISS')     /*발송일자*/
            , #{userId}        /* SMS전송ID */
            , #{content}                                        /*메세지 내용*/
            , #{sendTel}                                       /*보내는 사람 연락처*/
            , 'WEB_ORDER'                                       /*WEB 주문*/
            , #{loginId}                                   /*보내는 사람 LOGIN_ID*/
            , #{recvNm}                                        /*수신자명*/
            , #{sendNm}                                        /*발신자명*/
            , #{brchCd}                                    /*지점*/
            , TO_CHAR(CURRENT TIMESTAMP,'YYYYMMDDHH24MISS')     /* SMS전송일시(REAL) */
            )
    </insert>
    <!--  
    <select id="selectQnaList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectQnaList 문의/답변 목록 조회 */
        SELECT ROW_NUMBER() OVER() AS ROWNUMBER
             , A.CUST_CD
             , A.SNO
             , A.Q_GB_CD
             , (SELECT X.CD_NM
                  FROM T_CODE X
                 WHERE X.P_CODE = '334'
                   AND X.CODE = A.Q_GB_CD
               ) AS Q_GB_NM
             , A.Q_TITLE
             , A.Q_TXT
             , F_S_FORMAT(A.Q_DT, 'YYYY.MM.DD') AS Q_DT
             , A.Q_USER_ID
             , A.A_TXT
             , CASE WHEN A.A_DT != '' THEN F_S_FORMAT(A.A_DT, 'YYYY.MM.DD')
                    ELSE ''
               END AS A_DT
             , A.A_USER_ID
             , A.A_ST_GB
             , CASE WHEN A.A_ST_GB = 'Y' THEN '답변완료'
                    ELSE '검토중'
               END AS A_ST_GB_NM
          FROM T_WEB_QNA A
         WHERE A.Q_DT BETWEEN #{startDt} AND #{endDt}
           AND A.CUST_CD = #{custCd}
        <if test='qTitle != null and qTitle != ""'>
            <bind name="qTitle" value='"%" + qTitle + "%"'/>
                AND A.Q_TITLE LIKE #{qTitle}
        </if>
         ORDER BY A.SNO DESC
    </select>
    -->
    
    <select id="selectQnaList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectQnaList 문의/답변 목록 조회 */
        SELECT ROW_NUMBER() OVER() AS ROWNUMBER
             , A.CUST_CD
             , A.SNO
             , (A.CUST_CD || A.SNO) AS KEY_SNO
             , A.Q_GB_CD
             , (SELECT X.CD_NM
                  FROM T_CODE X
                 WHERE X.P_CODE = '334'
                   AND X.CODE = A.Q_GB_CD
               ) AS Q_GB_NM
             , A.Q_TITLE
             , A.Q_TXT
             , F_S_FORMAT(A.Q_DT, 'YYYY.MM.DD') AS Q_DT
             , A.Q_USER_ID
             , A.A_TXT
             , CASE WHEN A.A_DT != '' THEN F_S_FORMAT(A.A_DT, 'YYYY.MM.DD')
                    ELSE ''
               END AS A_DT
             , A.A_USER_ID
             , A.A_ST_GB
             , CASE WHEN A.A_ST_GB = 'Y' THEN '답변완료'
                    ELSE '검토중'
               END AS A_ST_GB_NM
             , B.CUST_NM
          FROM T_WEB_QNA A
          JOIN T_CUST B
            ON A.CUST_CD = B.CUST_CD
         WHERE 1=1
         AND A.Q_DT BETWEEN #{startDt} AND #{endDt}
         AND B.BRCH_CD IN (SELECT BRCH_CD FROM T_BRANCH WHERE P_BRCH_CD = #{loginBrchCd} OR BRCH_CD = #{loginBrchCd})
          <!-- AND A.CUST_CD = #{custCd} -->
        <if test='qTitle != null and qTitle != ""'>
            <bind name="qTitle" value='"%" + qTitle + "%"'/>
                AND A.Q_TITLE LIKE #{qTitle}
        </if>
        <if test="loginDeptCd != null and loginDeptCd !=''">
           AND B.DEPT_CD = #{loginDeptCd}
       </if>
       <if test="userGbCd =='30'">
           AND A.CUST_CD = #{custCd}
       </if>
         ORDER BY A.Q_DT DESC, ROWNUMBER DESC 
    </select>
    
    <insert id="insertQna" parameterType="java.util.HashMap" >
        /* myPage.insertQna 문의 등록 */
        INSERT INTO T_WEB_QNA
             ( CUST_CD
             , SNO
             , Q_GB_CD
             , Q_TITLE
             , Q_TXT
             , Q_DT
             , Q_USER_ID
             , A_TXT
             , A_DT
             , A_USER_ID
             , A_ST_GB
             , INS_ID
             , INS_DTM
             )
        VALUES
             ( #{custCd}
             , (SELECT IFNULL(MAX(X.SNO), 0) + 1
                  FROM T_WEB_QNA X
                 WHERE X.CUST_CD = #{custCd}
               )
             , #{qGbCd}
             , #{qTitle}
             , #{qTxt}
             , F_S_DAY()
             , #{userId}
             , ''
             , ''
             , ''
             , 'N'
             , #{loginId}
             , F_S_NOW()
             )
    </insert>
    
    <update id="updateQna" parameterType="java.util.HashMap" >
        /* myPage.updateQna 답변 등록 */
        UPDATE T_WEB_QNA
           SET A_TXT = #{aTxt}
             , A_DT = F_S_DAY()
             , A_ST_GB = 'Y'
             , A_USER_ID = #{userId}
             , MOD_ID = #{loginId}
             , MOD_DTM = F_S_NOW()
         WHERE CUST_CD = #{custCd}
           AND SNO = #{sno}
    </update>
    
    <select id="selectMypageCustList"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypageCustList 마이페이지 회원정보 수정 지점 관련 정보 */
        SELECT
            IFNULL(damo.SCP_DECB64('SCP_ALL',A.HP_NO),'')          AS EMP_HP
            , IFNULL(A.EMP_NM,'')                                  AS EMP_NM
            , IFNULL(B.SMS_YN,'')                                  AS SMS_YN
            , IFNULL(damo.SCP_DECB64('SCP_ALL',B.SMS_NO),'')       AS SMS_NO
            , IFNULL(B.CEO_NM,'')                                  AS CEO_NM
            , IFNULL(B.CUST_NM,'')                                 AS CUST_NM
            , IFNULL(damo.SCP_DECB64('SCP_ALL',B.CUST_ADDRESS),'') AS CUST_ADDRESS
            , IFNULL(damo.SCP_DECB64('SCP_ALL',B.EMAIL),'')        AS EMAIL
            , IFNULL(damo.SCP_DECB64('SCP_ALL',B.TEL_NO),'')       AS TEL_NO
        FROM T_EMP A
            LEFT JOIN T_CUST B ON A.DEPT_CD = B.DEPT_CD
        WHERE B.CUST_CD = #{custCd}
        FETCH FIRST 1 ROWS ONLY
    </select>
    
    <select id="selectMypageMemberList"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypageMemberList 마이페이지 회원정보 수정 지점 리스트 */
        SELECT
            A.USER_NM
            , A.LOGIN_ID
            , A.USER_ID
            , A.USE_YN
            , CASE WHEN USE_YN = 'N' THEN '미사용' ELSE '사용' END AS USE_YN_NM
        FROM T_USER A
        WHERE A.CUST_CD = #{custCd}
    </select>
    
    <update id="updateUserInfo" parameterType="java.util.HashMap">
        /* myPage.updateUserInfo 사용자 정보 수정 */
        UPDATE T_USER
           SET USER_NM = F_S_EMPTY(#{userNm}, '')
             , MOD_ID = F_S_EMPTY(#{modId}, '')
             , MOD_DTM = CURRENT TIMESTAMP
         WHERE USER_ID = F_S_EMPTY(#{userId}, '')
    </update>
    
    <update id="updateUserUseYn" parameterType="java.util.HashMap" >
        /* myPage.updateUserUseYn 사용여부 수정 */
        UPDATE T_USER
           SET USE_YN = F_S_EMPTY(#{useYn}, 'N')
             , MOD_ID = F_S_EMPTY(#{modId}, '')
             , MOD_DTM = CURRENT TIMESTAMP
         WHERE CUST_CD = #{custCd}
           AND USER_ID = #{userId}
    </update>
    
    <select id="selectPasswordCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectPasswordCheck 패스워드체크 */
        SELECT A.USER_ID                            /* 사용자ID */
             , A.LOGIN_ID                           /* 로그인ID */
             , A.USER_NM                            /* 사용자명 */
             , CASE WHEN #{encPwd}  = A.PASSWORD
                    THEN 1 ELSE 0
                    END AS PASSWORD                 /* 패스워드 */
             , CASE WHEN #{encPwd1} = A.PASSWORD1
                    THEN 1 ELSE 0
                    END AS PASSWORD1                /* 이전패스워드1 */
             , CASE WHEN #{encPwd1} = A.PASSWORD2
                    THEN 1 ELSE 0
                    END AS PASSWORD2                /* 이전패스워드2 */
             , CASE WHEN #{encPwd1} = A.PASSWORD3
                    THEN 1 ELSE 0
                    END AS PASSWORD3                /* 이전패스워드3 */
             , BRCH_CD      AS BRCH_CD
             , '0211'       AS DEPT_CD
             , '영업1팀'    AS DEPT_NM
          FROM T_USER A
         WHERE A.USER_ID = #{userId}
    </select>
    
    <update id="updateUserPw" parameterType="java.util.HashMap">
        /* myPage.updateUserPw 마이페이지 패스워드 수정 */
        UPDATE T_USER
           SET PASSWORD = F_S_EMPTY(#{encNewPwd}, '')
             , PASSWORD3 = PASSWORD
             , PASSWORD2 = PASSWORD3
             , PASSWORD1 = PASSWORD2
             , MOD_ID = F_S_EMPTY(#{modId}, '')
             , MOD_DTM = CURRENT TIMESTAMP
         WHERE USER_ID = F_S_EMPTY(#{userId}, '')
    </update>
    
    <insert id="insertNewUserInfo" parameterType="java.util.HashMap">
        /* myPage.insertNewUserInfo 마이페이지 사용자 정보 추가 */
        INSERT INTO T_USER
             ( USER_ID
             , LOGIN_ID
             , USER_NM
             , PASSWORD
             , BRCH_CD
             , USER_GB_CD
             , USER_CREATE_DT
             , CUST_CD
             , USE_YN
             , INS_ID
             , INS_DTM
             )
        VALUES
             ( F_S_EMPTY(#{loginId}, '')
             , F_S_EMPTY(#{loginId}, '')
             , F_S_EMPTY(#{userNm}, '')
             , F_S_EMPTY(#{encNewPwd}, '')
             , F_S_EMPTY(#{brchCd}, '')
             , '30'
             , VARCHAR_FORMAT(current date, 'YYYYMMDD')
             , F_S_EMPTY(#{custCd}, '')
             , 'Y'
             , F_S_EMPTY(#{insId}, '')
             , CURRENT TIMESTAMP
             )
    </insert>
    
    <select id="selectIdDupCount"  parameterType="java.util.HashMap" resultType="int">
        /* myPage.selectIdDupCount 마이페이지 회원정보 추가시 아이디 중복 카운트 */
        SELECT COUNT(LOGIN_ID) CNT
          FROM T_USER A
         WHERE A.LOGIN_ID = #{loginId} OR
               A.USER_ID = #{loginId}
    </select>
    
    <update id="updateMypageCustInfo" parameterType="java.util.HashMap" >
        /* myPage.updateMypageCustInfo 마이페이지 거래처 정보 수정 */
        UPDATE T_CUST
           SET TEL_NO = DAMO.SCP_ENCB64('SCP_ALL',F_S_EMPTY(#{telNo},''))
             , HP_NO = DAMO.SCP_ENCB64('SCP_ALL',F_S_EMPTY(#{smsNo} ,''))
             , EMAIL = DAMO.SCP_ENCB64('SCP_ALL',F_S_EMPTY(#{email} ,''))
         WHERE CUST_CD = #{custCd}
    </update>
    
    <select id="selectMypagePopupNoticeList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypagePopupNoticeList 마이페이지 팝업 공지사항 */
        SELECT
            ROW_NUMBER() OVER (ORDER BY A.SEQ_NO DESC) ROWNUMBER
            , A.TTL
            , VARCHAR_FORMAT( A.INS_DTM, 'YYYY.MM.DD') AS INS_DTM
            , A.SEQ_NO
            , CAST(A.CTT as varchar(32000)) CTT
        FROM T_BOARD A
        WHERE
            A.BOARD_CD = '06'
            AND A.DEL_YN = 'N'
        <if test="SEARCH_TTL != null and SEARCH_TTL !=''">
            <bind name="SEARCH_TTL" value='"%" SEARCH_TTL + "%"'/>
            AND TTL LIKE #{SEARCH_TTL}
        </if>
        <if test="SEARCH_CTT != null and SEARCH_CTT !=''">
            <bind name="SEARCH_CTT" value='"%" SEARCH_CTT + "%"'/>
            AND CAST(CTT AS VARCHAR(35000)) LIKE #{SEARCH_CTT}
        </if>
        ORDER BY
            A.SEQ_NO DESC
    </select>
    
    <select id="selectNoticeDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectNoticeDetail 공지사항 상세 */
        SELECT A.TTL
             , CAST(A.CTT as varchar(32000))  CTT
             , A.BOARD_CD
             , VARCHAR_FORMAT( A.INS_DTM, 'YYYY.MM.DD') AS INS_DTM
             , B.USER_NM
             , A.SEQ_NO
          FROM T_BOARD A
          LEFT JOIN T_USER B ON A.INS_ID = B.LOGIN_ID
         WHERE A.BOARD_CD = '06'
           AND A.DEL_YN = 'N'
           AND A.SEQ_NO = #{seqNo}
    </select>
    
    <select id="selectNoticeDetail2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectNoticeDetail2 공지사항 상세 */
        SELECT A.TTL
             , CAST(A.CTT as varchar(32000))  CTT
             , A.BOARD_CD
             , VARCHAR_FORMAT( A.INS_DTM, 'YYYY.MM.DD') AS INS_DTM
             , B.USER_NM
             , A.SEQ_NO
          FROM T_BOARD A
          LEFT JOIN T_USER B ON A.INS_ID = B.LOGIN_ID
         WHERE A.BOARD_CD = '06'
           AND A.DEL_YN = 'N'
           AND A.FIX_YN = 'Y'
           AND A.INS_DTM >= CURRENT DATE - 7 DAY
         LIMIT 1
    </select>
    
    <select id="selectMypagePopupBrchNoticeList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectMypagePopupBrchNoticeList 마이페이지 팝업 지점 공지사항 */
        SELECT
            ROW_NUMBER() OVER (ORDER BY A.SEQ_NO DESC) ROWNUMBER
            , A.TTL
            , VARCHAR_FORMAT( A.INS_DTM, 'YYYY.MM.DD') AS INS_DTM
            , A.SEQ_NO
            , CAST(A.CTT as varchar(32000)) CTT
        FROM T_BOARD A
        WHERE
            A.BOARD_CD    = '07'
            AND A.DEL_YN  = 'N'
            AND A.BRCH_CD = #{brchCd}
            <if test="SEARCH_TTL != null and SEARCH_TTL !=''">
                <bind name="SEARCH_TTL" value='"%" SEARCH_TTL + "%"'/>
                AND A.TTL LIKE #{SEARCH_TTL}
            </if>
            <if test="SEARCH_CTT != null and SEARCH_CTT !=''">
                <bind name="SEARCH_CTT" value='"%" SEARCH_CTT + "%"'/>
                AND CAST(A.CTT AS VARCHAR(35000)) LIKE #{SEARCH_CTT}
            </if>
        ORDER BY A.SEQ_NO DESC
    </select>
    
    <select id="selectBrNoticeDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectBrNoticeDetail 지점 공지사항 상세 */
        SELECT
            A.TTL
            , CAST(A.CTT as varchar(32000))  CTT
            , A.BOARD_CD
            , VARCHAR_FORMAT( A.INS_DTM, 'YYYY.MM.DD') AS INS_DTM
            , A.BRCH_CD
            , (SELECT B.USER_NM FROM T_USER B WHERE A.INS_ID = B.LOGIN_ID) USER_NM
            , A.SEQ_NO
        FROM T_BOARD A
        WHERE A.BOARD_CD = '07'
        AND A.BRCH_CD = #{brchCd}
        AND A.DEL_YN = 'N'
        AND A.SEQ_NO = #{seqNo}
    </select>
    
    <select id="selectBrNoticeDetail2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* myPage.selectBrNoticeDetail2 지점 공지사항 상세 */
        SELECT
            A.TTL
            , CAST(A.CTT as varchar(32000))  CTT
            , A.BOARD_CD
            , VARCHAR_FORMAT( A.INS_DTM, 'YYYY.MM.DD') AS INS_DTM
            , A.BRCH_CD
            , (SELECT B.USER_NM FROM T_USER B WHERE A.INS_ID = B.LOGIN_ID) USER_NM
            , A.SEQ_NO
        FROM T_BOARD A
        WHERE A.BOARD_CD = '07'
        AND A.BRCH_CD = #{BRCH_CD}
        AND A.DEL_YN = 'N'
        AND A.FIX_YN = 'Y'
        AND A.INS_DTM >= CURRENT DATE - 7 DAY
      LIMIT 1
    </select>
    
    <select id="selectTaxBillCount" resultType="java.util.HashMap">
        /* myPage.selectTaxBillCount 마이페이지 세금계산서 도트표시용 조회 */
        SELECT COUNT(1) AS CNT
             , MAX(PUB_DT) AS PUB_DT
             , F_S_ADDDATE('M', 'C', VARCHAR_FORMAT(CURRENT TIMESTAMP, 'YYYYMMDD'), 0) AS TODAY
             , MAX(WEB_READ_YN) AS WEB_READ_YN 
          FROM T_TAXBILL
         WHERE SB_GB_CD IN ('02','03')
           AND ETAX_SEND_YN = 'Y'
           AND PUB_DT BETWEEN F_S_ADDDATE('M', 'C', VARCHAR_FORMAT(CURRENT TIMESTAMP, 'YYYYMMDD'), -1)
                          AND F_S_ADDDATE('M', 'C', VARCHAR_FORMAT(CURRENT TIMESTAMP, 'YYYYMMDD'), 0)
           AND CUST_CD = #{custCd}
    </select>
    
    <update id="selectTaxBillCountUp" parameterType="java.util.HashMap" >
        /* myPage.selectTaxBillCount 마이페이지 세금계산서 도트표시용 조회 업데이트 */
        UPDATE T_TAXBILL
        SET WEB_READ_YN  ='Y'     
        WHERE CUST_CD = #{custCd}
    </update>
    
    <select id="selectMypageTaxbill" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /* myPage.selectMypageTaxbill 마마이페이지 세금계산서 관련 */
		SELECT
		    ROW_NUMBER() OVER (ORDER BY TAX_YM DESC, TAX_SEQ ASC) ROWNUMBER
		    , SUBSTRING(TAX_YM,1,4) || '.' || SUBSTRING(TAX_YM,5,2)  AS PUB_DT
		    , F_S_CODE('702', TAX_TYPE_CD,'NAME')   AS TAX_TYPE_NM
		    , IFNULL(NOPAY_ITEM_NM,'')  AS NOPAY_ITEM_NM
		    , IFNULL(NOPAY_SUPPLY_AMT,0)    AS NOPAY_SUPPLY_AMT
		    , IFNULL(NOPAY_VAT_AMT,0)   AS NOPAY_VAT_AMT
		    , (IFNULL(NOPAY_SUPPLY_AMT,0) + IFNULL(NOPAY_VAT_AMT,0))    AS NOPAY_TOTAL_AMT
		    , IFNULL(ETC_NOPAY_ITEM_NM ,'') AS ETC_NOPAY_ITEM_NM
		    , IFNULL(ETC_NOPAY_SUPPLY_AMT,0)    AS ETC_NOPAY_SUPPLY_AMT
		    , IFNULL(ETC_NOPAY_VAT_AMT,0)   AS ETC_NOPAY_VAT_AMT
		    , (IFNULL(ETC_NOPAY_SUPPLY_AMT,0) + IFNULL(ETC_NOPAY_VAT_AMT,0))    AS ETC_NOPAY_TOTAL_AMT
		    , IFNULL(PAY_ITEM_NM,'')    AS PAY_ITEM_NM
		    , IFNULL(PAY_SUPPLY_AMT,0)  AS PAY_SUPPLY_AMT
		    , IFNULL(PAY_VAT_AMT,0) AS PAY_VAT_AMT
		    , (IFNULL(PAY_SUPPLY_AMT,0) + IFNULL(PAY_VAT_AMT,0))    AS PAY_TOTAL_AMT
		    , IFNULL(ETC_PAY_ITEM_NM,'')    AS ETC_PAY_ITEM_NM
		    , IFNULL(ETC_PAY_SUPPLY_AMT,0)  AS ETC_PAY_SUPPLY_AMT
		    , IFNULL(ETC_PAY_VAT_AMT,0) AS ETC_PAY_VAT_AMT
		    , (IFNULL(ETC_PAY_SUPPLY_AMT,0) + IFNULL(ETC_PAY_VAT_AMT,0))    AS ETC_PAY_TOTAL_AMT
		    , (IFNULL(NOPAY_SUPPLY_AMT,0)+IFNULL(PAY_SUPPLY_AMT,0)+IFNULL(  ETC_NOPAY_SUPPLY_AMT,0)+IFNULL(ETC_PAY_SUPPLY_AMT,0))   AS PAY_SUM_SUPPLY_AMT
		    , (IFNULL(NOPAY_VAT_AMT,0)+IFNULL(PAY_VAT_AMT,0)+IFNULL(ETC_NOPAY_VAT_AMT,0)    +IFNULL(ETC_PAY_VAT_AMT,0)) AS PAY_SUM_VAT_AMT
		    , (IFNULL(NOPAY_SUPPLY_AMT,0)+IFNULL(NOPAY_VAT_AMT,0)+IFNULL(PAY_SUPPLY_AMT,    0)+IFNULL(PAY_VAT_AMT,0)+IFNULL(ETC_NOPAY_SUPPLY_AMT,0)+IFNULL(ETC_NOPAY_VAT_AMT,0)+IFNULL(ETC_PAY_SUPPLY_AMT,0)+IFNULL(ETC_PAY_VAT_AMT,0)) AS PAY_SUM_TOTAL_AMT
		FROM
		    T_TAXBILL
		WHERE
		        SB_GB_CD IN ('02','03')
		    AND ETAX_SEND_YN = 'Y'
		    AND TAX_YM LIKE UCASE(#{taxYm})||'%'
		    AND CUST_CD = #{custCd}
		    AND TAX_YM >= '201207'
		ORDER BY
		    TAX_YM DESC, TAX_SEQ ASC
    </select>
</mapper>