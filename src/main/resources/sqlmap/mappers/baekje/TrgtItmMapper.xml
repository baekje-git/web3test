<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="trgtItem">
    <select id="selectTrgtItemList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* trgtItm.selectTrgtItemList 대상품목 목록 조회 */
        SELECT M.*
             , ROW_NUMBER() OVER (ORDER BY M.APPLY_DT DESC, M.MAKER_NM, ITEM_NM_UNIT) AS  ROWNUMBER
             , (M.AVAIL_QTY * M.PRICE_AMT) AS ESTM_AMT
          FROM (SELECT B.ITEM_CD
                     , MAX(C.RATE) AS RATE
                     , IFNULL(SUM(D.ITEM_QTY),0) AS TOTAL_QTY /* 전체수량 */
                     , (CASE WHEN IFNULL(SUM(D.ITEM_QTY),0) <![CDATA[<=]]> 0 THEN 0
                              WHEN MAX(C.RATE3) = 'Y' THEN ROUND(IFNULL(SUM(D.ITEM_QTY),0) * MIN(C.RATE),0)
                              WHEN ROUND(IFNULL(SUM(D.ITEM_QTY),0) * MIN(C.RATE),0)  <![CDATA[<]]>  1 THEN 1
                              ELSE ROUND(IFNULL(SUM(D.ITEM_QTY),0) * MIN(C.RATE),0)
                        END) AS AVAIL_QTY /* 가능수량 */
                     , F_S_MASTER('MAKER', MAX(E.MAKER_CD), 'NM') AS MAKER_NM
                     , MAX(E.BOHUM_CD) AS BOHUM_CD
                    , MAX(E.ITEM_NM) || ' ' || MAX(E.UNIT) AS ITEM_NM_UNIT
                <!-- , SUM(CASE WHEN D.SALE_DT LIKE F_S_ADDDATE('M','M', '', 0) || '%' THEN IFNULL(D.ITEM_QTY, 0) -->
                     , SUM(CASE WHEN D.SALE_DT BETWEEN F_S_ADDDATE('M','M', B.CHG_DT, -1)||'01' AND F_S_ADDDATE('D','C', B.CHG_DT, -1) THEN IFNULL(D.ITEM_QTY, 0)
                                 ELSE 0
                            END) AS THIS_MONTH
                <!-- , SUM(CASE WHEN D.SALE_DT LIKE F_S_ADDDATE('M','M', '', -1) || '%' THEN IFNULL(D.ITEM_QTY, 0) -->
                     , SUM(CASE WHEN D.SALE_DT LIKE F_S_ADDDATE('M','M', B.CHG_DT, -2) || '%' THEN IFNULL(D.ITEM_QTY, 0)
                                 ELSE 0
                            END) AS BEFORE_MONTH
                <!-- , SUM(CASE WHEN D.SALE_DT LIKE F_S_ADDDATE('M','M', '', -2) || '%' THEN IFNULL(D.ITEM_QTY, 0)  -->
                     , SUM(CASE WHEN D.SALE_DT LIKE F_S_ADDDATE('M','M', B.CHG_DT, -3) || '%' THEN IFNULL(D.ITEM_QTY, 0)
                                 ELSE 0
                            END) AS PREVIOUS_MONTH
                     , F_S_FORMAT(MAX(B.CHG_DT),'YYYY.MM.DD') AS APPLY_DT
                     , MAX(B.WP2_OLD) AS WP2_OLD
                     , MAX(B.WP2_NEW) AS WP2_NEW
                     , (MAX(B.WP2_OLD) - MAX(B.WP2_NEW)) AS PRICE_AMT
                     , SUBSTRING(COALESCE(MAX(F.CD_NM),''), 1, 1) AS MED_NM
                     , SUBSTRING(CASE WHEN MAX(E.PAY_ITEM_YN) = 'Y' THEN '급여' ELSE '비급여' END, 1, 1) AS PAY_ITEM_NM
                  FROM T_CUST A
                  JOIN T_ITEM_BOHUM B
                    ON B.BRCH_CD = A.DLV_BRCH_CD
                   AND B.WP2_NEW <![CDATA[<]]> B.WP2_OLD
                  JOIN (SELECT CODE AS BRCH_CD
                              ,USER_STRING1 AS PERIOD_MM
                              ,X.USER_STRING1
                              ,X.USER_STRING4
                              ,(CASE WHEN CHAR_LENGTH(X.USER_STRING3) = 2 THEN VARCHAR_FORMAT(CURRENT DATE - ABS(-1*X.USER_STRING1+1) MONTH,'YYYYMM') || X.USER_STRING3
                                     WHEN CHAR_LENGTH(X.USER_STRING3) = 8 THEN X.USER_STRING3
                                     ELSE VARCHAR_FORMAT(CURRENT DATE - ABS(-1*X.USER_STRING1+1) MONTH,'YYYYMM') || '01'
                                     END) AS FR_DT
                              ,(CASE WHEN CHAR_LENGTH(X.USER_STRING3) = 8 THEN X.USER_STRING4
                                     ELSE TO_CHAR(CURRENT DATE,'YYYYMMDD')
                                     END) AS TO_DT
                              ,ROUND(CAST(CAST(USER_STRING2 AS DECIMAL(18,5))/CAST(100 AS DECIMAL(18,5)) AS DECIMAL(18,5)),2) AS RATE
                              ,USER_STRING5 AS RATE3
                          FROM T_CODE X
                         WHERE X.P_CODE = '140'
                           AND X.CODE = '01') C
                    ON 1 = 1
                  <if test='selItemYn == "0"'>LEFT</if>
                  JOIN V_SALE_DTL D
                    ON D.CUST_CD = A.CUST_CD
                   AND D.ITEM_CD = B.ITEM_CD
                   AND D.SALE_DT BETWEEN C.FR_DT AND C.TO_DT
                   AND D.ORD_TYPE_CD NOT IN ('34')
                  JOIN T_ITEM E
                    ON E.ITEM_CD = B.ITEM_CD
                   AND E.SUBDIV_YN = 'N'
                  LEFT OUTER JOIN T_CODE F
                    ON F.P_CODE = '101'
                   AND F.CODE = E.MED_CD
                 WHERE A.CUST_CD = #{custCd}
                   AND A.CUST_GB_CD NOT IN ('09')
                <!--  
                <if test="keyword != null and keyword != ''">
                   AND (E.BOHUM_CD = #{bohumCd} OR
                        E.ITEM_NM LIKE #{itemNm})
                </if>
                -->
                <if test="itemNm != null and itemNm !=''">
		        <bind name="itemNm" value='"%" + itemNm + "%"'/>
		           AND E.ITEM_NM LIKE #{itemNm}
		        </if>
		        <if test="bohumCd != null and bohumCd !=''">
		         <bind name="bohumCd" value='"%" + bohumCd + "%"'/>
		           AND E.BOHUM_CD LIKE #{bohumCd}
		        </if>
                <if test="startDt != null and startDt != '' and endDt != null and endDt != ''">
                   AND B.CHG_DT BETWEEN #{startDt} AND #{endDt}
                </if>
                <if test="makerNm != null and makerNm !=''">
                    <bind name="makerNm" value='"%" + makerNm + "%"'/>
                        AND F_S_MASTER('MAKER', E.MAKER_CD, 'NM') LIKE #{makerNm}
                </if>
                 GROUP BY B.ITEM_CD
                 <!-- LIMIT #{PAGE_PER_CNT} OFFSET #{PAGE_OFFSET_CNT} -->
               ) M
               ORDER BY ROWNUMBER
    </select>
</mapper>